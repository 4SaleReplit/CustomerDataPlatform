PS D:\Projects\CustomerDataPlatform> npx tsc
server/routes-clean.ts:25:18 - error TS2307: Cannot find module 'node-cron' or its corresponding type declarations.

25 import cron from "node-cron";
                    ~~~~~~~~~~~

server/routes-final.ts:22:18 - error TS2307: Cannot find module 'node-cron' or its corresponding type declarations.

22 import cron from "node-cron";
                    ~~~~~~~~~~~

server/services/amplitude.ts:73:19 - error TS18046: 'result' is of type 'unknown'.

73         cohortId: result.cohort_id || result.id,
                     ~~~~~~

server/services/amplitude.ts:73:39 - error TS18046: 'result' is of type 'unknown'.

73         cohortId: result.cohort_id || result.id,
                                         ~~~~~~

server/services/dataSync.ts:1:10 - error TS2724: '"./snowflake"' has no exported member named 'snowflakeService'. Did you mean 'SnowflakeService'?

1 import { snowflakeService } from './snowflake';
           ~~~~~~~~~~~~~~~~

  server/services/snowflake.ts:22:14
    22 export class SnowflakeService {
                    ~~~~~~~~~~~~~~~~
    'SnowflakeService' is declared here.

server/services/dataSync.ts:97:28 - error TS7006: Parameter 'row' implicitly has an 'any' type.

97     return result.rows.map(row => ({
                              ~~~

server/services/queue.ts:5:10 - error TS2724: '"./snowflake"' has no exported member named 'snowflakeService'. Did you mean 'SnowflakeService'?

5 import { snowflakeService } from './snowflake';
           ~~~~~~~~~~~~~~~~

  server/services/snowflake.ts:22:14
    22 export class SnowflakeService {
                    ~~~~~~~~~~~~~~~~
    'SnowflakeService' is declared here.

server/services/queue.ts:103:42 - error TS7006: Parameter 'row' implicitly has an 'any' type.

103     const userIds = queryResult.rows.map(row => row[0]); // Assuming USER_ID is the first column
                                             ~~~

server/vite.ts:39:5 - error TS2322: Type '{ middlewareMode: boolean; hmr: { server: Server<typeof IncomingMessage, typeof ServerResponse>; }; allowedHosts: boolean; }' is not assignable to type 'ServerOptions'.
  Types of property 'allowedHosts' are incompatible.
    Type 'boolean' is not assignable to type 'true | string[] | undefined'.

39     server: serverOptions,
       ~~~~~~


Found 9 errors in 6 files.

Errors  Files
     1  server/routes-clean.ts:25
     1  server/routes-final.ts:22
     2  server/services/amplitude.ts:73
     2  server/services/dataSync.ts:1
     2  server/services/queue.ts:5
     1  server/vite.ts:39
PS D:\Projects\CustomerDataPlatform>