import requests
import json

# --- Your Braze Credentials ---
# Found in Braze under Developer Console > REST API Keys
BRAZE_API_KEY = "3cb9fbad-67d8-4ee8-ad9d-ba59660f35b2" 
# Your Braze REST API URL depends on your dashboard instance. 
# Examples: https://rest.iad-01.braze.com, https://rest.fra-01.braze.com
BRAZE_INSTANCE_URL = "https://rest.fra-02.braze.eu" 

# --- User & Attribute Details ---
# The custom attribute you will use to build your segment in Braze
segment_attribute_name = "high_value_customer"
segment_attribute_value = True
# The list of users you want to add to the segment
user_ids_to_update = ["user_a123", "user_b456", "user_c789", "user_d101"]

# --- Prepare the API Request ---
# The endpoint for tracking user attributes
url = f"{BRAZE_INSTANCE_URL}/users/track"

# Braze's /users/track endpoint expects a list of attribute objects.
# We will create one object for each user ID.
attribute_objects = []
for user_id in user_ids_to_update:
    attribute_objects.append({
        "external_id": user_id,
        segment_attribute_name: segment_attribute_value
    })

# Create the final JSON payload
payload = {
    "attributes": attribute_objects
}

# Set the request headers with your Braze API Key
headers = {
    "Content-Type": "application/json",
    "Authorization": f"Bearer {BRAZE_API_KEY}"
}

# --- Send the request ---
try:
    response = requests.post(url, headers=headers, data=json.dumps(payload))
    # Raises an HTTPError for bad responses (4xx or 5xx)
    response.raise_for_status()  

    print("Successfully sent user data to Braze!")
    print("Response JSON:", response.json())
    print("\nNext Step: Create a new segment in your Braze dashboard filtering by the custom attribute")
    print(f"'{segment_attribute_name}' is '{segment_attribute_value}'")


except requests.exceptions.HTTPError as errh:
    print(f"Http Error: {errh}")
    print(f"Response Body: {response.text}")
except requests.exceptions.RequestException as err:
    print(f"An error occurred: {err}")
