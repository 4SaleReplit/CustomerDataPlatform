CREATE TABLE public.users (
  user_id INTEGER PRIMARY KEY,
  user_type TEXT,
  phone BIGINT,
  current_credits_in_wallet DOUBLE PRECISION,
  is_block INTEGER,
  user_account_creation_date TIMESTAMP WITHOUT TIME ZONE,
  first_paid_listing_date TIMESTAMP WITHOUT TIME ZONE,
  last_paid_listing_date TIMESTAMP WITHOUT TIME ZONE,
  first_transaction_date TIMESTAMP WITHOUT TIME ZONE,
  last_transaction_date TIMESTAMP WITHOUT TIME ZONE,
  days_since_last_paid_listing INTEGER,
  days_since_last_paid_transaction INTEGER,
  days_since_last_transaction INTEGER,
  active_months_last_6 DOUBLE PRECISION,
  active_weeks_last_12 DOUBLE PRECISION,
  paid_listings_count INTEGER,
  free_listings_count INTEGER,
  total_listings_count INTEGER,
  office_listings_count INTEGER,
  total_credits_spent INTEGER,
  total_premium_credits_spent INTEGER,
  total_free_credits_spent INTEGER,
  extra_addons_count INTEGER,
  extra_addons_total_credits DOUBLE PRECISION,
  extra_addons_premium_credits DOUBLE PRECISION,
  extra_addons_free_credits DOUBLE PRECISION,
  verticals_listed_in TEXT,
  levels_1_listed_in TEXT,
  plans_or_bundles_used TEXT,
  favorite_vertical TEXT,
  favorite_level_1 TEXT,
  number_of_verticals_listed_in INTEGER,
  number_of_level1_categories_listed_in INTEGER,
  is_multivertical_user INTEGER,
  favorite_plan_or_bundle TEXT,
  favorite_extra_addon TEXT,
  top_extra_addons TEXT,
  basic_listings_count INTEGER,
  basic_credits_spent INTEGER,
  pro_listings_count INTEGER,
  pro_credits_spent INTEGER,
  extra_listings_count INTEGER,
  extra_credits_spent INTEGER,
  plus_listings_count INTEGER,
  plus_credits_spent INTEGER,
  super_listings_count INTEGER,
  super_credits_spent INTEGER,
  standard_listings_count INTEGER,
  standard_credits_spent INTEGER,
  premium_listings_count INTEGER,
  premium_credits_spent INTEGER,
  optimum_listings_count INTEGER,
  optimum_credits_spent INTEGER,
  car_offices_listings_count INTEGER,
  car_offices_credits_spent INTEGER,
  property_offices_listings_count INTEGER,
  property_offices_credits_spent INTEGER,
  electronics_shops_listings_count INTEGER,
  electronics_shops_credits_spent INTEGER,
  addon_pinning_listings_count INTEGER,
  addon_pinning_credits_spent INTEGER,
  addon_extended_listings_count INTEGER,
  addon_extended_credits_spent INTEGER,
  addon_promoted_listings_count INTEGER,
  addon_promoted_credits_spent INTEGER,
  addon_pinning_shuffle_listings_count INTEGER,
  addon_pinning_shuffle_credits_spent INTEGER,
  addon_premium_listings_count INTEGER,
  addon_premium_credits_spent INTEGER,
  addon_power_pin_listings_count INTEGER,
  addon_power_pin_credits_spent INTEGER,
  addon_refresh_listings_count INTEGER,
  addon_refresh_credits_spent INTEGER,
  addon_vip_listings_count INTEGER,
  addon_vip_credits_spent INTEGER,
  offer_50_days_used INTEGER,
  offer_baraka_days_used INTEGER,
  offer_total_days_used INTEGER,
  offer_50_percentage DOUBLE PRECISION,
  offer_baraka_percentage DOUBLE PRECISION,
  offer_total_percentage DOUBLE PRECISION
);

-- 1️⃣ Cohorts Table

CREATE TABLE public.cohorts (
  cohort_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name TEXT NOT NULL,
  description TEXT,
  definition JSONB, -- AND/OR condition builder structure
  source TEXT, -- Manual, Amplitude, API imported
  total_users_estimated INT DEFAULT 0,
  created_by UUID,
  created_at TIMESTAMP DEFAULT NOW(),
  updated_at TIMESTAMP DEFAULT NOW()
);

2️⃣ Segments Table (optional reusable filters library)

CREATE TABLE public.segments (
  segment_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name TEXT NOT NULL,
  segment_type TEXT,  -- Static, Dynamic, System
  logic JSONB,
  created_by UUID,
  created_at TIMESTAMP DEFAULT NOW(),
  updated_at TIMESTAMP DEFAULT NOW()
);

3️⃣ Promotions Table

CREATE TABLE public.promotions (
  promo_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  cohort_id UUID REFERENCES public.cohorts(cohort_id),
  promo_code TEXT UNIQUE,
  promo_type TEXT,  -- CreditBoost, Discount, BonusBundle, Custom
  promo_metadata JSONB,
  start_date TIMESTAMP NOT NULL,
  expiry_date TIMESTAMP NOT NULL,
  usage_limit INT DEFAULT 1,
  created_by UUID,
  created_at TIMESTAMP DEFAULT NOW(),
  updated_at TIMESTAMP DEFAULT NOW()
);

4️⃣ Promo Redemptions Table

CREATE TABLE public.promo_redemptions (
  redemption_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  promo_id UUID REFERENCES public.promotions(promo_id),
  user_id int4 REFERENCES public.users(user_id),
  redeemed_at TIMESTAMP DEFAULT NOW(),
  redemption_status TEXT DEFAULT 'success',
  notes TEXT
);

5️⃣ Cohort Members Table (Optional materialized cohort membership)

CREATE TABLE public.cohort_members (
  cohort_id UUID REFERENCES public.cohorts(cohort_id),
  user_id int4 REFERENCES public.users(user_id),
  computed_at TIMESTAMP DEFAULT NOW(),
  PRIMARY KEY (cohort_id, user_id)
);

6️⃣ Integration Logs Table

CREATE TABLE public.integration_logs (
  log_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  integration_name TEXT,
  external_id TEXT,
  run_type TEXT,  -- Import, Export, Refresh
  run_status TEXT,  -- success, failed, partial
  processed_records INT DEFAULT 0,
  started_at TIMESTAMP,
  finished_at TIMESTAMP,
  error_message TEXT
);

-- 7️⃣ Activation Jobs Table

CREATE TABLE public.activation_jobs (
  job_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  cohort_id UUID REFERENCES public.cohorts(cohort_id),
  promo_id UUID REFERENCES public.promotions(promo_id),
  target_channel TEXT, -- Redis, Braze, Email, SMS etc
  status TEXT, -- queued, running, success, failed
  triggered_by UUID,
  triggered_at TIMESTAMP DEFAULT NOW(),
  finished_at TIMESTAMP
);
SELECT 
    tab.relname AS table_name,
    idx.relname AS index_name,
    pg_get_indexdef(idx.oid) AS index_definition
FROM 
    pg_class tab
JOIN 
    pg_index ind ON tab.oid = ind.indrelid
JOIN 
    pg_class idx ON idx.oid = ind.indexrelid
WHERE 
    tab.relkind = 'r'
ORDER BY 
    tab.relname, idx.relname;
