# Frontend Dockerfile - Multi-stage build for optimized production (ARM64)
FROM --platform=linux/arm64 node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY client/package*.json ./client/

# Install dependencies
RUN npm ci --production=false

# Copy source code
COPY client/ ./client/
COPY shared/ ./shared/

# Build the application
RUN cd client && npm run build

# Production stage - ARM64 optimized
FROM --platform=linux/arm64 nginx:alpine

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Copy built application
COPY --from=builder /app/client/dist /usr/share/nginx/html

# Add environment variable substitution script
COPY env-config.sh /docker-entrypoint.d/
RUN chmod +x /docker-entrypoint.d/env-config.sh

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/ || exit 1

CMD ["nginx", "-g", "daemon off;"]