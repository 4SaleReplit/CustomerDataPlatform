version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cdp-postgres
    environment:
      POSTGRES_DB: customer_data_platform
      POSTGRES_USER: cdp_user
      POSTGRES_PASSWORD: cdp_password_2024
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cdp_user -d customer_data_platform"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - cdp-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cdp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - cdp-network

  # Customer Data Platform Application
  app:
    image: cdp-app:latest
    container_name: cdp-app
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://cdp_user:cdp_password_2024@postgres:5432/customer_data_platform
      - REDIS_URL=redis://redis:6379
      - PORT=5000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - cdp-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  cdp-network:
    driver: bridge